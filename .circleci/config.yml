version: 2.1
description: |
  An orb for working with Amazon Elastic Container Service (ECS).
  Supports the EC2 and Fargate launch types and Blue/Green deployment
  via CodeDeploy.
orbs:
  aws-ecr: circleci/aws-ecr@6.5.0
  aws-ecs: circleci/aws-ecs@0.0.10
  aws-ecs: circleci/aws-ecs@1.1.0

# / Delete if not needed
workflows:
  build_and_push_image:
    jobs:
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME # 775267258898.dkr.ecr.us-east-2.amazonaws.com/weatherapp-dockerized
          aws-access-key-id: ACCESS_KEY_ID_ENV_VAR_NAME
          aws-secret-access-key: SECRET_ACCESS_KEY_ENV_VAR_NAME
          context: myContext
          create-repo: true
          dockerfile: Dockerfile
          path: ./nginx
          profile-name: myProfileName
          region: AWS_REGION_ENV_VAR_NAME
          repo: myECRRepository
          tag: 'latest,myECRRepoTag'
# Delete if not needed /

jobs:
  build:
    docker:
      - image: circleci/node:13.7.0
    steps:
      - checkout
      - run: npm install
      - run: CI=true npm build
  test:
    docker:
      - image: circleci/node:13.7.0
    steps:
      - checkout
      - run: npm install
      #- run: npm run test
  client-test:
    docker:
      - image: circleci/node:13.7.0
    steps:
      - checkout
      - run: echo "Tests client side"
  server-test:
    docker:
      - image: circleci/node:13.7.0
    steps:
      - checkout
      - run: echo "Tests on server-side"
workflows:
  version: 2
  build-test-and-lint:
    jobs:
      - build
      - server-test
      - client-test
      - test:
          requires:
            - server-test